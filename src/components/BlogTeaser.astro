---
import { getCollection } from "astro:content";
import FormattedDate from "./FormattedDate.astro";
import { Image } from "astro:assets";
import { getLocalizedPosts } from "../getLocalizedPosts";
import { categoryMap } from "../categoryMap";

// Alle Blogposts holen
const allPosts = await getCollection("blog");

// Sprache aus URL ableiten
const currentLang = Astro.url.pathname.startsWith("/en") ? "en" : "de";

// Lokalisierte Blogposts holen
const localizedPosts = getLocalizedPosts(allPosts, currentLang)
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .slice(0, 3);

// Helper: Sprache-zu-Emoji
const getLangEmoji = (lang: string): string => {
  switch (lang) {
    case "de": return "🇩🇪";
    case "en": return "🇬🇧";
    default: return "🌐";
  }
};

// Helper: korrekter Link zum Post
const getPostUrl = (post) =>
  `${post.data.lang === "en" ? "/en" : ""}/blog/${post.id}/`;
---

<section class="blog-preview">
  <div class="width-container">
    <span class="devider"></span>
    <div class="section-heading">
      <h2>Neues im Blog</h2>
    </div>

    <ul>
      {
        localizedPosts.map((post) => (
          <li>
            <a href={getPostUrl(post)}>
              <div class="blogteaserImage">
                {post.data.heroImage && (
                  <Image src={post.data.heroImage} alt={post.data.heroAlt ?? ""} />
                )}
                <p class="lang">{getLangEmoji(post.data.lang)}</p>
                {post.data.category && (
                  <p class="category">{categoryMap[post.data.category]?.emoji}</p>
                )}
                <p class="date">
                  <FormattedDate date={post.data.pubDate} />
                </p>
              </div>
              <div class="cardbottom">
                <h3>{post.data.title}</h3>
                <p>{post.data.description}</p>
              </div>
            </a>
          </li>
        ))
      }
    </ul>

    <p class="more-link">
      <a href={currentLang === 'en' ? '/en/blog' : '/blog'}>Alle Beiträge ansehen →</a>
    </p>
  </div>
</section>


<style lang="scss">
  .blog-preview {
    margin-top: -6rem;
    padding-bottom: 3rem;
    padding-top: 8rem;
    background-color: var(--gray-light);
    border-radius: 2rem 2rem 0 0;
    box-shadow: var(--box-shadow-section);


    .devider {
      display: block;
      border-top: 0.2rem solid (var(--accent));
      width: 100%;
      height: 1px;
    }

    .blogteaserImage {

        position: relative;
        font-family: 'Inter', sans-serif;
        z-index: 1;

        img{
          max-width: 100%;
          height: 200px;
          object-fit: cover;
          border-radius: 16px 16px 0 0;
        }


        .lang {
          background-color: white;
          padding: 0.4rem 0.7rem;
          border-radius: 0.5rem;
          width: fit-content;
          position: absolute;
          top: 0;
          right: 0;
          margin: 1rem;
          box-shadow: var(--box-shadow-card);
        }
    
        .category {
          background-color: white;
          padding: 0.4rem 0.7rem;
          border-radius: 0.5rem;
          width: fit-content;
          position: absolute;
          top: 0;
          left: 0;
          margin: 1rem;
          box-shadow: var(--box-shadow-card);
        }
    
        .date {
          background-color: white;
          padding: 0.4rem 0.5rem;
          border-radius: 0.5rem;
          width: fit-content;
          position: absolute;
          bottom: 0;
          left: 0;
          margin: 1.5rem 1rem;
          box-shadow: var(--box-shadow);
        }


    }

    .cardbottom{

      border-top-left-radius: 16px;
      border-top-right-radius: 16px;
      margin-top: -1rem;
      position: relative;
      z-index: 10;
      background-color: var(--gray-light);
      padding: 1rem 0;
      box-shadow: var(--box-shadow-cardbottom);



      p {
        text-align: center;
        margin: 0.5rem 1rem;
      }

      h3 {
        border-top: 0.15rem solid #fff;
        border-bottom: 0.15rem solid #fff;
        margin: 0.5rem;
        padding: 0.5rem;
        font-family: "Inter", sans-serif;
        font-weight: 600;
        font-size: 1.2rem;
        text-align: center;
  }


    }

  }
  .blog-preview ul {
    list-style: none;
    padding: 0;
    display: flex;
    justify-content: space-between;
  }
  .blog-preview li {
    width: 31%;
    border-radius: 16px;
    transition: transform 0.3s ease;
    border: 0.2rem solid #fff;
    box-shadow: var(--box-shadow-card);
    overflow: hidden;



    &:hover {
        transform: scale(1.05);
    }

    //clip-path: url(#svgPath);
  }
  .blog-preview a {
    text-decoration: none;
    color: inherit;
  }


  .more-link {
    margin: 2rem 0 1rem 0;    
    text-align: right;
    display: block;
    font-weight: 600;
    
    a{
      position: relative;
      
      &::after{
          content: '';
          position: absolute;
          left: 0;
          bottom: -6px;
          width: 100%;
          height: 3px;
          background-color: transparent;
          transition: background-color 0.2s ease;
      }
  
      &:hover {
          &::after{
            background-color: var(--linkunderline);
          }
      }
    }

  }
  @media (max-width: 900px) {
    .blog-preview ul {
      flex-direction: column;

      li{
        width: 100%;
        margin: 1em 0;

        img {
          height: 350px;
        }
      }
    }
  }

  @media (min-width: 1800px) {
    .blog-preview {
      //z-index: 2;
      position: relative;

      li .blogteaserImage img {
        height: 400px;
      }
    }
}
</style>
