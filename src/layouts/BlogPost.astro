---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FooterEng from '../components/en-components/FooterEng.astro';
import FormattedDate from '../components/FormattedDate.astro';
import { Image } from 'astro:assets';
import { categoryMap } from "../categoryMap";

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, category, updatedDate, heroImage, heroAlt, lang } = Astro.props;

const categoryLabel = category ? `${categoryMap[category]?.emoji} ${categoryMap[category]?.label[lang]}` : '';

const getLangEmoji = (lang: string): string => {
  switch (lang) {
    case 'de':
      return 'üá©üá™';
    case 'en':
      return 'üá¨üáß';
    default:
      return 'üåê';
  }
};

// Alt-Fallback: Wenn kein heroAlt gesetzt ist ‚Üí leer (dekorativ) ODER als einfache, sinnvolle Notl√∂sung den Titel
const heroAltText = heroAlt ?? ""; // oder z.B.: heroAlt ?? `${title} ‚Äì Headerbild`

---

<html>
	<head>
		<BaseHead
		title={title}
		description={description}
		lang={lang}
		slug={`/blog/${Astro.url.pathname.split('/blog/')[1]}`}
		image={heroImage}
		type="article"
		/>
	</head>

	<body>
		<Header />
		<main>
			<article>
				<h1 class="blog-title subpage-heading">{title}</h1>
				<div class="facts">
					<p class="lang">{getLangEmoji(lang)}</p>

					<div class="date">
						<FormattedDate date={pubDate} />
					</div>
					{category && <p class="category">{categoryLabel}</p>}

				</div>

				<p class="desc">{description}</p>
				<div class="hero-image">
					{heroImage && <Image width={1020} height={510} src={heroImage} alt={heroAltText} />}
				</div>
				<div class="prose">
					<slot />
				</div>
			</article>
		</main>
  		{lang === 'en' ? <FooterEng /> : <Footer />}
	</body>
</html>

<style lang="scss">
			main {
				width: 80%;
				max-width: 1600px;
				margin: 0 auto;
			}

			.hero-image {
				width: 100%;
				margin: 1rem auto;
			}
			.hero-image img {
				display: block;
				margin: 0 auto;
				border-radius: 12px;
				box-shadow: var(--box-shadow);
			}
			.prose {
				margin: auto;

			}

			.desc{
				text-align: center;
				padding: 1rem 0;
				border-top: 3px solid #fff;
				border-bottom: 3px solid #fff;

			}


			.facts{
				display: flex;
				margin-bottom: 1rem;
				justify-content: space-between;
				align-items: center;

				.lang{
				background-color: var(--accent);
				padding: 0.4rem 0.7rem;
				border-radius: 0.5rem;
				width: fit-content;
				margin: 0;
				box-shadow: var(--box-shadow-card);
			}
				
				.date {
				background-color: var(--accent);
				padding: 0.4rem 0.7rem;
				border-radius: 0.5rem;
				width: fit-content;
				margin: 0;
				box-shadow: var(--box-shadow-card);
				}

				.category {
				background-color: var(--accent);
				padding: 0.4rem 0.7rem;
				border-radius: 0.5rem;
				width: fit-content;
				margin: 0;
				box-shadow: var(--box-shadow-card);
				}
			}

		</style>